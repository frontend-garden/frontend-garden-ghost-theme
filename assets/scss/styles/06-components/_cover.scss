@use "sass:color";
@use "sass:map";
@use "../../settings/colors";
@use "../../tools/units";

.cover {
    position: relative;
    overflow: hidden;
}

.cover__text {
    --link-color: #{map.get(colors.$ui, info-light)};

    position: relative;
    z-index: 2;
    color: var(--cover-text-color);
}

.cover__canvas {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    margin-bottom: 0;

    &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
        background-color: color.adjust(colors.$black, $alpha: -0.333);
    }
}

.cover__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
}

.cover--precomposed .cover__canvas::after {
    display: none;
}

.cover--object .cover__image {
    object-position: 75% center;
}

.cover--object .cover__canvas::after {
    background:
        radial-gradient(
            circle at left 25%,
            var(--gradient-from),
            var(--gradient-from) 32rem,
            var(--gradient-to) calc((46rem - #{units.limit-vw(12)}) * 1.5)
        );
}

.cover--full-page.cover--object .cover__canvas::after {
    background:
        radial-gradient(
            circle at left 25%,
            var(--gradient-from),
            var(--gradient-from) calc(60rem - #{units.limit-vw(20)}),
            var(--gradient-to) calc(80rem - #{units.limit-vw(10)})
        );
}

.cover--object--light {
    $overlay-color: colors.$white;

    --gradient-from: #{color.adjust($overlay-color, $alpha: -0.06)};
    --gradient-to: #{color.adjust($overlay-color, $alpha: -1)};

    @media (prefers-color-scheme: dark) {
        $overlay-color: color.adjust(colors.$black, $alpha: -0.333);

        --gradient-from: #{$overlay-color};
        --gradient-to: #{color.adjust($overlay-color, $alpha: -0.25)};
    }
}

@media (prefers-color-scheme: light), (prefers-color-scheme: no-preference) {
    .cover--object--light .cover__text {
        --link-color: #{map.get(colors.$ui, info)};

        text-shadow: 0 0 0.4em colors.$white;
        color: inherit;
    }

    .cover--full-page.cover--object--light {
        $overlay-color: map.get(colors.$grays, gray-lightest);

        --gradient-from: #{color.adjust($overlay-color, $alpha: -0.06)};
        --gradient-to: #{color.adjust($overlay-color, $alpha: -1)};

        background-color: map.get(colors.$grays, gray-lighter);
    }

    .cover--full-page.cover--object--light .cover__text {
        text-shadow: none;
    }
}

.cover--object--dark {
    $overlay-color: color.adjust(colors.$black, $alpha: -0.333);

    --gradient-from: #{$overlay-color};
    --gradient-to: #{color.adjust($overlay-color, $alpha: -0.25)};
}

.cover--bootstrap.cover--object--dark {
    $overlay-color: color.adjust(map.get(colors.$tags, bootstrap-purple-800), $alpha: -0.35);

    --gradient-from: #{$overlay-color};
    --gradient-to: #{color.adjust($overlay-color, $alpha: -0.7)};

    @media (prefers-color-scheme: dark) {
        $overlay-color: color.adjust(map.get(colors.$tags, bootstrap-purple-900), $alpha: -0.25);

        --gradient-from: #{$overlay-color};
        --gradient-to: #{color.adjust($overlay-color, $alpha: -0.4)};
    }
}
