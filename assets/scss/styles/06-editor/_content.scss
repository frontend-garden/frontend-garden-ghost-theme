// 1. Break vertical rhythm inside blockquote (but get it back immediately after).
// 2. Custom styling of inline `<code>` fragments matches prism.js Okaidia theme.
// 3. Increase specificity to headings, paragraphs and lists to avoid unwanted leaks to code blocks
//    styled by prism.js.
// 4. Separate perex with horizontal line.
// 5. Reset small caps in the first line of perex in Safari as there is a bug:
//    https://bugs.webkit.org/show_bug.cgi?id=3409

@use "sass:map";
@use "../../../../node_modules/modularscale-sass/stylesheets/modularscale";
@use "../../settings/borders";
@use "../../settings/colors";
@use "../../settings/container" as container-settings;
@use "../../settings/tables";
@use "../../tools/breakpoint";
@use "../../tools/browser-hacks";
@use "../../tools/container";
@use "../../tools/content-block";
@use "../../tools/horizontal-ruler";
@use "../../tools/spacing";
@use "../../tools/transition";
@use "../../tools/typography";

// Links
.editor a {
    overflow-wrap: break-word;
}

// Headlines
.editor h2:not(:first-child) {
    margin-top: spacing.of(1);
    margin-bottom: spacing.of(1);

    @include breakpoint.up(md) {
        margin-top: spacing.of(2);
    }
}

.editor h2 a,
.editor h3 a,
.editor h4 a,
.editor h5 a,
.editor h6 a {
    @include typography.link-unstyled();
    @include transition.add(color);

    @include breakpoint.up(sm) {
        @media (hover: hover) {
            position: relative;

            &::before {
                @include transition.add("opacity, transform");

                content: "#";
                position: absolute;
                right: 100%;
                bottom: 0.14em;
                color: map.get(colors.$grays, gray);
                opacity: 0;
                transform: translateX(-0.25rem);
            }

            &:hover,
            &:focus {
                color: map.get(colors.$ui, info);
            }

            &:hover::before,
            &:focus::before {
                opacity: 1;
                transform: translateX(-0.5rem);
            }
        }
    }
}

// Images and videos
.editor figure img,
.editor figure video {
    display: block;
    max-width: 100%;
    height: auto;
}

// stylelint-disable-next-line selector-no-qualifying-type -- Specifically target SVG images.
.editor figure img[src$=".svg"] {
    width: 100%;
}

.editor figcaption {
    @include typography.style(small-caps);

    font-size: modularscale.ms(-1);
    line-height: typography.line-height(dense);

    &::before {
        content: "â†‘";
        margin-right: 1ex;
    }
}

// Quotes
.editor blockquote {
    @include content-block.vertical-offset();
    @include typography.style(blockquote);

    padding: spacing.of(0.5) 0 spacing.of(0.5) spacing.of(1); // 1.
    border-left: borders.$width-thick solid map.get(colors.$ui, info);
}

// Code
// 2., 3.
.editor p code,
.editor ol code,
.editor ul code,
.editor h2 code,
.editor h3 code,
.editor h4 code,
.editor h5 code,
.editor h6 code {
    @include typography.style(code);

    padding: 0.2em 0.4em;
    border-radius: borders.$radius;
}

.editor h2 code,
.editor h3 code {
    font-size: 0.8em;
}

// Tables
.editor table {
    @include content-block.vertical-offset();
    @include content-block.wide($declare-width: true);
}

.editor th,
.editor td {
    @include typography.style(small);

    padding: 0.75em tables.$cell-padding-horizontal;
    line-height: typography.line-height(medium);
    vertical-align: baseline;
}

.editor th {
    text-align: left;
}

.editor tbody tr:nth-child(odd) {
    background-color: var(--alternate-background-color);
}

.editor th:first-child,
.editor td:first-child {
    padding-left: container-settings.$padding;

    @include breakpoint.up(sm) {
        padding-left: tables.$cell-padding-horizontal;
    }
}

.editor th:last-child,
.editor td:last-child {
    padding-right: container-settings.$padding;

    @include breakpoint.up(sm) {
        padding-right: tables.$cell-padding-horizontal;
    }
}

// Perex
.editor--long-text > p:first-child {
    &::first-line {
        @include typography.style(small-caps);

        font-weight: typography.font-weight(bold);
        line-height: typography.line-height(large);
    }

    // 4.
    &::after {
        @include horizontal-ruler.create();

        content: "";
        display: block;
        margin-top: spacing.of(1);
        margin-bottom: spacing.of(1);
    }
}

// 5.
@include browser-hacks.safari-only(".editor--long-text p:first-child::first-line") {
    font-size: 1em;
    line-height: inherit;
    font-family: inherit;
    font-variant: normal;
    font-feature-settings: normal;
    letter-spacing: 0;
    text-transform: none;
}
