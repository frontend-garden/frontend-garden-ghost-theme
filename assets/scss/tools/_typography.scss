@use "sass:map";
@use "../settings/typography";
@use "../settings/typography-styles";
@use "../tools/breakpoint";

@mixin style($style) {
    $style-props: map.get(typography-styles.$styles, $style);

    @if not map.has-key(typography-styles.$styles, $style) {
        @error "Invalid style specified! #{$style} doesn't exist. Choose one of #{map-keys(typography-styles.$styles)}";
    }

    @each $key, $value in map.get($style-props, default) {
        #{$key}: $value;
    }

    @if map.has-key($style-props, breakpoints) {
        @each $breakpoint in map-keys(map.get($style-props, breakpoints)) {
            @include breakpoint.up($breakpoint) {
                @each $key, $value in map.get(map.get($style-props, breakpoints), $breakpoint) {
                    #{$key}: $value;
                }
            }
        }
    }
}

@function line-height($value) {
    @if not map.has-key(typography.$line-height-values, $value) {
        @error "Invalid line height specified! #{$value} doesn't exist. "
            + "Choose one of #{map-keys(typography.$line-height-values)}";
    }

    @return map.get(typography.$line-height-values, $value);
}

@function font-weight($value) {
    @if not map.has-key(typography.$font-weight-values, $value) {
        @error "Invalid font weight specified! #{$value} doesn't exist. "
            + "Choose one of #{map-keys(typography.$font-weight-values)}";
    }

    @return map.get(typography.$font-weight-values, $value);
}

// stylelint-disable property-no-vendor-prefix, value-no-vendor-prefix -- Ignore necessary properties.
@mixin line-clamp($lines) {
    @if $lines == 1 {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    } @else {
        display: -webkit-box;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}
// stylelint-enable

@mixin list-unstyled() {
    padding-left: 0;
    list-style: none;
}

@mixin link-unstyled() {
    text-decoration: none;
    color: inherit;
    border-bottom: 0;
}
