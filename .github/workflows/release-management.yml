name: Release Management

on:
  push:
    branches: [main]

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-20.04
    outputs:
      version_changed: ${{ steps.check_package_version.outputs.changed }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Check package.json for version change
        id: check_package_version
        uses: EndBug/version-check@v2.1.0

      - name: Log when version changed
        if: steps.check_package_version.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check_package_version.outputs.commit }}! New version: ${{ steps.check_package_version.outputs.version }} (${{ steps.check_package_version.outputs.type }})"'

      - name: Log when version unchanged
        if: steps.check_package_version.outputs.changed == 'false'
        run: 'echo "No version change"'

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: assets/built

  deploy_theme:
    name: Deploy theme to Ghost instance
    needs: [build_and_test]
    if: needs.build_and_test.outputs.version_changed == 'true'
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: assets
          path: assets/built

      - name: Deploy Ghost theme to instance
        uses: TryGhost/action-deploy-theme@v1.5.0
        with:
          api-url: ${{ secrets.GHOST_ADMIN_API_URL }}
          api-key: ${{ secrets.GHOST_ADMIN_API_KEY }}
          exclude: '.* assets/scss/* dist/* postcss.config.js'