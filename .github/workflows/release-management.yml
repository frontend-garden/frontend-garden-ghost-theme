name: Release Management

on:
  push:
    branches: [main]

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-20.04
    outputs:
      version_changed: ${{ steps.check_package_version.outputs.changed }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Check package.json for version change
        id: check_package_version
        uses: EndBug/version-check@v2.1.0

      - name: Log when version changed
        if: steps.check_package_version.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check_package_version.outputs.commit }}! New version: ${{ steps.check_package_version.outputs.version }} (${{ steps.check_package_version.outputs.type }})"'

      - name: Log when version unchanged
        if: steps.check_package_version.outputs.changed == 'false'
        run: 'echo "No version change"'

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: assets/built

  deploy_theme:
    name: Deploy theme to Ghost instance
    needs: [build_and_test]
    if: needs.build_and_test.outputs.version_changed == 'true'
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: assets
          path: assets/built

      - name: Deploy Ghost theme to instance
        uses: TryGhost/action-deploy-theme@v1.5.0
        with:
          api-url: ${{ secrets.GHOST_ADMIN_API_URL }}
          api-key: ${{ secrets.GHOST_ADMIN_API_KEY }}
          exclude: '.* assets/scss/* dist/* postcss.config.js'

  needs: [deploy_theme]
  on:
    push:
      branches:
        - main
      tags:
        - '${{ steps.check_package_version.outputs.version }}' # Push events to matching the version in package.json

  name: Create Release

  jobs:
    build:
      name: Create Release
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Check commit message format
          id: check_commit_format
          run: |
            if [[ ! ${{ github.event.head_commit.message }} =~ ^Release\ v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Commit message format is not valid. Skipping release creation."
              exit 0
            fi
        - name: Create release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ steps.check_package_version.outputs.version }}
            release_name: Release ${{ steps.check_package_version.outputs.version }}
            body: |
              Changes in this Release
              - First Change
              - Second Change
            draft: true
            prerelease: false
        - name: Upload release asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: /home/runner/work/ghost-theme/ghost-theme/ramonguilherme-ghost-theme.zip
            asset_name: ramonguilherme-ghost-theme.zip
            asset_content_type: application/zip
        - name: Publish release
          uses: StuYarrow/publish-release@v1.1.2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            id: ${{ steps.create_release.outputs.id }}